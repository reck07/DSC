#include <stdio.h>
#include <ctype.h>

char stack[20];
int top = -1;

void push(char elem) {
    stack[++top] = elem;
}

char pop() {
    return stack[top--];
}

int priority(char elem) {
    switch (elem) {
        case '#':
            return 0;
        case '(':
            return 1;
        case '+':
        case '-':
            return 2;
        case '*':
        case '%':
        case '/':
            return 3;
        default:
            return -1; // Handle invalid characters
    }
}

int main() {
    char infix[20], postfix[20], elem, ch;
    int i = 0, k = 0;
    printf("Enter the infix expression: ");
    scanf("%s", infix);
    push('#');

    while ((ch = infix[i++]) != '\0') {
        if (ch == '(')
            push(ch);
        else if (isalnum(ch))
            postfix[k++] = ch;
        else if (ch == ')') {
            while (stack[top] != '(')
                postfix[k++] = pop();
            elem = pop(); // Discard the '('
        } else {
            while (priority(stack[top]) >= priority(ch))
                postfix[k++] = pop();
            push(ch);
        }
    }

    while (stack[top] != '#')
        postfix[k++] = pop();
    postfix[k] = '\0';

    printf("Postfix expression: %s\n", postfix);
    return 0;
}
